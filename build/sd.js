var t;!function(t){t.POINT="Point",t.LINE="Line",t.CIRCLE="Circle",t.POLYGON="Polygon",t.CUSTOM="Custom"}(t||(t={}));var e=t;class s{constructor(){this.coordinates=[],this.style={}}getCoordinates(){return this.coordinates&&this.coordinates.slice()}setCoordinates(t){this.coordinates=t}setStyle(t){this.style=t}}function i(t){const s={};return s[e.LINE]=[{stroke:{color:"#39c",width:1.25}}],s[e.POLYGON]=[{fill:{color:"rgba(255, 255, 255, 0.2)"}}].concat(s[e.LINE]),s[e.CIRCLE]=s[e.POLYGON],s[e.POINT]=s[e.CIRCLE],s[t]}function r(t){const s={};return s[e.LINE]=[{stroke:{color:"rgba(255, 255, 255, 1)",width:5}},{stroke:{color:"rgba(0, 153, 255, 1)",width:3}}],s[e.POLYGON]=[{fill:{color:"rgba(255, 255, 255, 0.5)"}}].concat(s[e.LINE]),s[e.CIRCLE]=s[e.POLYGON],s[e.POINT]=[{fill:{color:"rgba(0, 153, 255, 1)"},stroke:{color:"rgba(255, 255, 255, 1)",width:1.5}}],s[t]}function o(t,e){e.forEach((function(e){e.fill&&(t.fillStyle=e.fill.color||"rgba(0, 0, 0, 1)",t.fill()),e.stroke&&(t.strokeStyle=e.stroke.color||"rgba(0, 0, 0, 1)",t.lineWidth=e.stroke.width||1,t.lineCap=e.stroke.lineCap||"round",t.lineJoin=e.stroke.lineJoin||"round",t.miterLimit=e.stroke.miterLimit||10,t.stroke())}))}class n extends s{constructor(t){super(),this.radius=6,this.setCoordinates(t),this.setStyle(i(this.getType()))}render(t){t.beginPath(),t.arc(this.coordinates[0][0],this.coordinates[0][1],this.radius,0,2*Math.PI),o(t,this.style),t.closePath()}getType(){return e.POINT}setRadius(t){this.radius=t}}class a extends s{constructor(t){super(),this.radius=0,t&&this.setCoordinates(t),this.setStyle(i(this.getType()))}render(t){const e=this.getCenter(),s=this.getRadius();t.beginPath(),t.arc(e[0],e[1],s,0,2*Math.PI),o(t,this.style),t.closePath()}getType(){return e.CIRCLE}getCenter(){return this.getCoordinates()[0]}setCenter(t){this.coordinates[0]=t}getRadius(){return this.radius}setRadius(t){this.radius=t}}class h extends s{constructor(t){super(),this.setCoordinates(t),this.setStyle(i(this.getType()))}render(t){t.beginPath(),t.moveTo(this.coordinates[0][0],this.coordinates[0][1]);for(let e=1,s=this.coordinates.length;e<s;e++)t.lineTo(this.coordinates[e][0],this.coordinates[e][1]);o(t,this.style),t.closePath()}getType(){return e.LINE}}class c extends s{constructor(t){super(),this.setCoordinates(t),this.setStyle(i(this.getType()))}render(t){t.beginPath(),t.moveTo(this.coordinates[0][0],this.coordinates[0][1]);for(let e=1,s=this.coordinates.length;e<s;e++)t.lineTo(this.coordinates[e][0],this.coordinates[e][1]);o(t,this.style),t.closePath()}getType(){return e.POLYGON}}class d{constructor(t){this.type="string"==typeof t?t:t.type,this.isFreehand=void 0!==t.freehand&&t.freehand,this.isDrawing=!1,this.sketchCoords=[],this.sketchFeature,this.context,this.features=[],this.type===e.POINT&&(this.geometryConstructor=n),this.type===e.CIRCLE&&(this.geometryConstructor=a),this.type===e.LINE&&(this.geometryConstructor=h),this.type===e.POLYGON&&(this.geometryConstructor=c),this.type===e.CUSTOM&&(this.geometryConstructor=c),this.createGeometryCoordinates=t.createGeometryCoordinates}setContext(t){this.context=t}setFeatures(t){this.features=t}startDrawing(t){this.isDrawing=!0,this.sketchCoords=[t],this.sketchFeature=new this.geometryConstructor,this.sketchFeature.setStyle(r(this.sketchFeature.getType())),this.sketchFeature.setCoordinates(this.sketchCoords)}modifyDrawing(t){const s=this.type,i=this.sketchFeature.getType();if(this.sketchCoords[this.sketchCoords.length-1]=t,i===e.CIRCLE){const e=this.sketchFeature.getCenter(),s=e[0]-t[0],i=e[1]-t[1];this.sketchFeature.setRadius(Math.sqrt(s*s+i*i))}if(i===e.POLYGON)if(s===e.POLYGON)this.sketchFeature.setCoordinates(this.sketchCoords);else{const t=this.createGeometryCoordinates(this.sketchCoords[0],this.sketchCoords[1]);this.sketchFeature.setCoordinates(t)}this.sketchFeature.render(this.context)}addCoordinateDrawing(t){this.sketchCoords.push(t),this.sketchFeature.setCoordinates(this.sketchCoords),this.isFreehand&&this.sketchFeature.render(this.context)}finishDrawing(){this.isDrawing=!1;const t=this.type,s=this.sketchFeature.getType();t===e.POINT?this.sketchFeature.setRadius(5):t===e.POLYGON&&(this.sketchCoords.push(this.sketchCoords[0]),this.sketchFeature.setCoordinates(this.sketchCoords)),this.sketchFeature.setStyle(i(s)),this.features.push(this.sketchFeature),this.sketchFeature=null}}function l(){return function(t,e){return[[t[0],t[1]],[e[0],t[1]],[e[0],e[1]],[t[0],e[1]],[t[0],t[1]]]}}function u(t){return function(e,s){const i=[],r=s[0]-e[0],o=s[1]-e[1],n=Math.sqrt(r*r+o*o),a=Math.atan(o/r)-(r<0?Math.PI:0);for(let s=0;s<t;s++){const r=a+2*Math.PI/t*s;i[s]=[e[0]+n*Math.cos(r),e[1]+n*Math.sin(r)]}return i[t]=i[0],i}}const g=window.devicePixelRatio||1;export default class{constructor(t){this.container=t,this.context=document.createElement("canvas").getContext("2d"),this.viewport=document.createElement("div"),this.viewport.style.position="relative",this.viewport.style.overflow="hidden",this.viewport.style.width="100%",this.viewport.style.height="100%",this.viewport.style.userSelect="none",this.viewport.style.touchAction="none",this.canvas=this.context.canvas,this.canvas.style.display="block",this.canvas.style.width="100%",this.canvas.style.height="100%",this.viewport.insertBefore(this.canvas,this.viewport.firstChild),this.container.appendChild(this.viewport),this.features=[],this.draw=null,this.animationDelay=function(){this.resize(Date.now)}.bind(this),this.animationDelay(Date.now()),this.init(this),this.context.scale(g,g)}init(t){!function(t){const s=t.getContext(),i=t.getCanvas(),o=new n;function a(){const s=t.getDraw();s&&s.isFreehand&&s.type!==e.POINT&&(s.finishDrawing(),t.render(),i.removeEventListener("pointerup",a,!1))}function h(){const e=t.getDraw();e&&!e.isFreehand&&e.isDrawing&&(e.finishDrawing(),t.render(),i.removeEventListener("pointerup",a,!1))}i.addEventListener("click",(function(s){const r=t.getDraw();r&&!r.isFreehand&&(r.isDrawing?r.type===e.CIRCLE||r.type===e.CUSTOM?(r.finishDrawing(),t.render()):r.addCoordinateDrawing([s.layerX,s.layerY]):(r.startDrawing([s.layerX,s.layerY]),r.type===e.POINT?(r.finishDrawing(),t.render()):r.addCoordinateDrawing([s.layerX,s.layerY])),i.addEventListener("dblclick",h,!1))}),!1),i.addEventListener("pointerdown",(function(s){const r=t.getDraw();r&&r.isFreehand&&(r.isDrawing?r.type===e.CIRCLE?(r.finishDrawing(),t.render()):r.addCoordinateDrawing([s.layerX,s.layerY]):(r.startDrawing([s.layerX,s.layerY]),r.type===e.POINT?(r.finishDrawing(),t.render()):r.addCoordinateDrawing([s.layerX,s.layerY])),i.addEventListener("pointerup",a,!1))}),!1),i.addEventListener("pointermove",(function(i){const n=t.getDraw();t.render(),n&&(o.setStyle(r(e.POINT)),o.setCoordinates([[i.layerX,i.layerY]]),o.render(s),n.isDrawing&&(!n.isFreehand||n.type!==e.LINE&&n.type!==e.POLYGON?n.modifyDrawing([i.layerX,i.layerY]):n.addCoordinateDrawing([i.layerX,i.layerY])))}),!1)}(t)}getContainer(){return this.container}getContext(){return this.context}getCanvas(){return this.canvas}getEventPixel(t){const e=this.viewport.getBoundingClientRect();return[t.clientX-e.left,t.clientY-e.top]}getFeatures(){return this.features.slice()}addFeature(t){this.features.push(t)}clearFeature(){this.features.length=0}render(){this.clear(),this.features.forEach(function(t){t.render(this.context)}.bind(this))}getDraw(){return this.draw}setDraw(t){this.clearDraw(),t.setContext(this.context),t.setFeatures(this.features),this.draw=t}clearDraw(){this.draw=null}clear(){const t=this.getCanvas();this.getContext().clearRect(0,0,t.width,t.height)}resize(){const t=this.getContainer(),e=getComputedStyle(t),s=this.getCanvas(),i=[t.offsetWidth-parseFloat(e.borderLeftWidth)-parseFloat(e.paddingLeft)-parseFloat(e.paddingRight)-parseFloat(e.borderRightWidth),t.offsetHeight-parseFloat(e.borderTopWidth)-parseFloat(e.paddingTop)-parseFloat(e.paddingBottom)-parseFloat(e.borderBottomWidth)],r=Math.round(i[0]*g),o=Math.round(i[1]*g);s.width===r&&s.height===o||(s.width=r,s.height=o),this.triggerResize()}triggerResize(){requestAnimationFrame(this.animationDelay)}}export{a as Circle,d as Draw,e as GeometryType,h as Line,n as Point,c as Polygon,l as createBox,u as createRegularPolygon};
